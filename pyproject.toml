[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "siraj-mcp-server"
version = "6.0.0"
description = "Siraj v6.0 Computational Linguistics MCP Server with 72-Node Archetypal Semantic Mapping"
authors = [
    {name = "Siraj Team", email = "siraj@linguistics.org"},
]
readme = "README.md"
license = {file = "LICENSE"}
requires-python = ">=3.10"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Text Processing :: Linguistic",
]

dependencies = [
    # Core MCP dependencies
    "mcp>=1.4.0",
    "fastmcp>=2.0.0",
    
    # NLP and Linguistics
    "transformers>=4.35.0",
    "torch>=2.0.0",
    "sentence-transformers>=2.2.0",
    "spacy>=3.7.0",
    "nltk>=3.8.0",
    "camel-tools>=1.5.0",
    
    # Scientific Computing
    "numpy>=1.24.0",
    "scipy>=1.11.0",
    "scikit-learn>=1.3.0",
    "pandas>=2.0.0",
    "networkx>=3.0.0",
    
    # Data Validation and Processing
    "pydantic>=2.0.0",
    "pydantic-settings>=2.0.0",
    
    # Database and Storage
    "asyncpg>=0.28.0",
    "aiosqlite>=0.19.0",
    "redis>=4.5.0",
    
    # HTTP and Web
    "aiohttp>=3.8.0",
    "requests>=2.31.0",
    
    # Utilities
    "python-dotenv>=1.0.0",
    "click>=8.0.0",
    "rich>=13.0.0",
    "loguru>=0.7.0",
    
    # Visualization (optional)
    "plotly>=5.15.0",
    "matplotlib>=3.7.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "pre-commit>=3.0.0",
]

gpu = [
    "torch[cuda]>=2.0.0",
    "transformers[torch]>=4.35.0",
]

docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.0.0",
    "mkdocstrings[python]>=0.22.0",
]

[project.urls]
Homepage = "https://github.com/siraj-team/siraj-mcp"
Repository = "https://github.com/siraj-team/siraj-mcp.git"
Documentation = "https://siraj-mcp.readthedocs.io"
Issues = "https://github.com/siraj-team/siraj-mcp/issues"

[project.scripts]
siraj-mcp-server = "src.server.main:main"

[tool.setuptools]
package-dir = {"" = "."}

[tool.setuptools.packages.find]
where = ["."]
include = ["src*"]

[tool.black]
line-length = 100
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 100

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --cov=src --cov-report=html --cov-report=term"
testpaths = ["tests"]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]